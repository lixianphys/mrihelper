services:
  fastapi:
      build:
        context: .
        dockerfile: Dockerfile.backend
      networks:
        - app-network
      ports:
        - "8001:8001"
      depends_on:
        redis:
          condition: service_started
        rabbitmq:
          condition: service_started
      env_file:
        - .env.minio
  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: sh -c "sleep 15 && celery -A tasks.celery_app worker --loglevel=info"
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
    env_file:
      - .env.minio
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - API_BASE_URL=http://localhost:8001
    networks:
      - app-network
    ports:
      - "8000:80"
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI
    networks:
      - app-network
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-guest}
      
  redis:
    image: redis:latest
    networks:
      - app-network
    ports:
      - "6379:6379"
      
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    networks:
      - app-network
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app-network:
    driver: bridge
    
volumes:
  minio-data:
    driver: local